[{"C:\\work\\exchange-project\\src\\index.js":"1","C:\\work\\exchange-project\\src\\utils\\exchangerate.req.js":"2","C:\\work\\exchange-project\\src\\App.jsx":"3","C:\\work\\exchange-project\\src\\Currency.jsx":"4"},{"size":197,"mtime":1635855304297,"results":"5","hashOfConfig":"6"},{"size":559,"mtime":1635857637387,"results":"7","hashOfConfig":"6"},{"size":2404,"mtime":1635858764937,"results":"8","hashOfConfig":"6"},{"size":609,"mtime":1635858790733,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"mkp7q9",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\work\\exchange-project\\src\\index.js",[],["19","20"],"C:\\work\\exchange-project\\src\\utils\\exchangerate.req.js",[],"C:\\work\\exchange-project\\src\\App.jsx",["21","22","23","24"],"C:\\work\\exchange-project\\src\\Currency.jsx",[],{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":23,"column":13,"nodeType":"31","endLine":31,"endColumn":4},{"ruleId":"29","severity":1,"message":"32","line":31,"column":6,"nodeType":"33","endLine":31,"endColumn":8,"suggestions":"34"},{"ruleId":"29","severity":1,"message":"30","line":33,"column":13,"nodeType":"31","endLine":38,"endColumn":4},{"ruleId":"29","severity":1,"message":"35","line":38,"column":6,"nodeType":"33","endLine":38,"endColumn":32,"suggestions":"36"},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'amount', 'fromSelected', and 'toSelected'. Either include them or remove the dependency array.","ArrayExpression",["39"],"React Hook useEffect has a missing dependency: 'amount'. Either include it or remove the dependency array.",["40"],"no-global-assign","no-unsafe-negation",{"desc":"41","fix":"42"},{"desc":"41","fix":"43"},"Update the dependencies array to be: [amount, fromSelected, toSelected]",{"range":"44","text":"45"},{"range":"46","text":"45"},[1078,1080],"[amount, fromSelected, toSelected]",[1272,1298]]